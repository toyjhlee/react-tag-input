{"version":3,"file":"ContentEditable.js","sourceRoot":"","sources":["../../../src/components/ContentEditable.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {safeHtmlString} from \"../utils/functions\";\n\ninterface Props {\n  value: string;\n  className: string;\n  innerEditableRef: React.RefObject<HTMLDivElement>;\n  inputRef: React.RefObject<HTMLInputElement>;\n  change: (value: string) => void;\n  remove: () => void;\n  validator?: (value: string) => boolean;\n  removeOnBackspace?: boolean;\n  maxLength?: number;\n  spaceRemove?: boolean;\n}\n\nexport class ContentEditable extends React.Component<Props> {\n\n  // Track focus state of editable tag\n  focused: boolean = false;\n\n  // Track if element has been removed from DOM\n  removed: boolean = false;\n\n  // Save value before input is focused / user starts typing\n  preFocusedValue: string = \"\";\n\n  regSpecialCharacter: RegExp = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]/g;\n\n  componentDidMount() {\n    this.preFocusedValue = this.getValue();\n  }\n\n  onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\n\n    // Cancel paste event\n    e.preventDefault();\n\n    // Remove formatting from clipboard contents\n    const text = e.clipboardData.getData(\"text/plain\");\n\n    // Insert text manually from paste command\n    document.execCommand(\"insertHTML\", false, safeHtmlString(text));\n\n  }\n\n  onFocus = () => {\n    this.preFocusedValue = this.getValue();\n    this.focused = true;\n  }\n\n  onBlur = () => {\n\n    this.focused = false;\n\n    const ref = this.props.innerEditableRef.current;\n    const { validator, change, maxLength } = this.props;\n\n    if (!this.removed && ref) {\n\n      // On blur, if no content in tag, remove it\n      if (ref.innerText === \"\") {\n        this.props.remove();\n        return;\n      }\n\n      // Validate input if needed\n      if (validator) {\n        const valid = validator(this.getValue());\n        // If invalidate, switch ref back to pre focused value\n        if (!valid) {\n          ref.innerText = this.preFocusedValue;\n          return;\n        }\n      }\n\n      change(this.finishConvert(ref.innerText));\n    }\n  }\n\n  finishConvert = (origin: string) => {\n    const { maxLength, spaceRemove } = this.props;\n    let input: string = origin;\n    if (spaceRemove) { // TEST: 한글 + space\n      input = input.replace(/\\s/g, \"\");\n    }\n\n    if (maxLength) {\n      input = input.slice(0, maxLength);\n    }\n\n    return input;\n  }\n\n  onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    // On enter, focus main tag input\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.focusInputRef();\n      return;\n    }\n\n    // On backspace, if no content in ref, remove tag and focus main tag input\n    const { removeOnBackspace, maxLength } = this.props;\n    const value = this.getValue();\n    if (removeOnBackspace && e.keyCode === 8 && value === \"\") {\n      this.removed = true;\n      this.props.remove();\n      this.focusInputRef();\n      return;\n    }\n\n    const overMaxLength = maxLength && this.getValue().trim().length >= maxLength;\n\n    if ((e.ctrlKey || e.metaKey) && e.keyCode === 86) { // paste\n      if (overMaxLength) {\n        e.preventDefault();\n        return;\n      }\n    }\n\n    if (overMaxLength && !this.isAllowedKeyCode(e)) {\n      e.preventDefault();\n      return;\n    }\n\n    if (!this.hasSpecialCharacter(e) && !this.isAllowedKeyCode(e)) {\n      e.preventDefault();\n      return;\n    }\n  }\n\n  hasSpecialCharacter = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    const inputChar = String.fromCharCode(e.keyCode);\n    let ret = false;\n    if (inputChar === \"\" && inputChar == null) {\n      ret = false;\n    } else {\n      if (inputChar.replace(this.regSpecialCharacter, \"\") === \"\") {\n        ret = false;\n      } else {\n        ret = true;\n      }\n    }\n    return ret;\n  }\n\n  isAllowedKeyCode = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    return e.keyCode === 8 ||\n        e.keyCode === 38 ||\n        e.keyCode === 39 ||\n        e.keyCode === 37 ||\n        e.keyCode === 40 ||\n        e.ctrlKey ||\n        e.metaKey;\n  }\n\n  getValue = () => {\n    const ref = this.getRef();\n    return ref ? ref.innerText : \"\";\n  }\n\n  getRef = () => {\n    return this.props.innerEditableRef.current;\n  }\n\n  focusInputRef = () => {\n    const { inputRef } = this.props;\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }\n\n  render() {\n    const { value, className, innerEditableRef } = this.props;\n    return (\n      <div\n        ref={innerEditableRef}\n        className={className}\n        contentEditable={true}\n        onPaste={this.onPaste}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onKeyDown={this.onKeyDown}\n        dangerouslySetInnerHTML={{ __html: safeHtmlString(value) }}\n      />\n    );\n  }\n\n}\n"]}