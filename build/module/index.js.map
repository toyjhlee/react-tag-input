{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Tag} from \"./components/Tag\";\nimport {classSelectors} from \"./utils/selectors\";\n\ntype Tags = string[];\n\nexport interface ReactTagInputProps {\n  tags: Tags;\n  onChange: (tags: Tags) => void;\n  placeholder?: string;\n  maxTags?: number;\n  validator?: (val: string) => boolean;\n  editable?: boolean;\n  readOnly?: boolean;\n  removeOnBackspace?: boolean;\n  maxLength?: number;\n}\n\ninterface State {\n  input: string;\n}\n\nexport default class ReactTagInput extends React.Component<ReactTagInputProps, State> {\n\n  state = { input: \"\" };\n\n  // Ref for input element\n  inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n  onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const input = e.target.value;\n    if (input !== \"\" && !/^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]+$/.test(input)) {\n      e.stopPropagation();\n      return;\n    }\n    this.setState({ input });\n  }\n\n  onInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n\n    const { input } = this.state;\n    const { validator, removeOnBackspace } = this.props;\n\n    // On enter or space\n    if (e.keyCode === 13) {\n\n      // Prevent form submission if tag input is nested in <form>\n      e.preventDefault();\n\n      // If input is blank, do nothing\n      if (input === \"\") { return; }\n\n      // Check if input is valid\n      const valid = validator !== undefined ? validator(input) : true;\n      if (!valid) {\n        return;\n      }\n\n      // Add input to tag list\n      this.addTag(input.replace(/\\s/g, \"\"));\n\n    }\n    // On backspace or delete\n    else if (removeOnBackspace && (e.keyCode === 8 || e.keyCode === 46)) {\n\n      // If currently typing, do nothing\n      if (input !== \"\") {\n        return;\n      }\n\n      // If input is blank, remove previous tag\n      this.removeTag(this.props.tags.length - 1);\n\n    }\n\n  }\n\n  addTag = (value: string) => {\n    const tags = [ ...this.props.tags ];\n    if (!tags.includes(value)) {\n      tags.push(value);\n      this.props.onChange(tags);\n    }\n    this.setState({ input: \"\" });\n  }\n\n  removeTag = (i: number) => {\n    const tags = [ ...this.props.tags ];\n    tags.splice(i, 1);\n    this.props.onChange(tags);\n  }\n\n  updateTag = (i: number, value: string) => {\n    const tags = [...this.props.tags];\n    const numOccurencesOfValue = tags.reduce((prev, currentValue, index) => prev + (currentValue === value && index !== i ? 1 : 0) , 0);\n    if (numOccurencesOfValue > 0) {\n      tags.splice(i, 1);\n    } else {\n      tags[i] = value;\n    }\n    this.props.onChange(tags);\n  }\n\n  render() {\n\n    const { input } = this.state;\n\n    const { tags, placeholder, maxTags, editable, readOnly, validator, removeOnBackspace, maxLength } = this.props;\n\n    const maxTagsReached = maxTags !== undefined ? tags.length >= maxTags : false;\n\n    const isEditable = readOnly ? false : (editable || false);\n\n    const showInput = !readOnly && !maxTagsReached;\n\n    return (\n      <div className={classSelectors.wrapper}>\n        {tags.map((tag, i) => (\n          <Tag\n            key={i}\n            value={tag}\n            index={i}\n            editable={isEditable}\n            readOnly={readOnly || false}\n            inputRef={this.inputRef}\n            update={this.updateTag}\n            remove={this.removeTag}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n            maxLength={maxLength}\n            spaceRemove={true}\n          />\n        ))}\n        {showInput &&\n          <input\n            ref={this.inputRef}\n            value={input}\n            className={classSelectors.input}\n            placeholder={placeholder || \"Type and press enter\"}\n            onChange={this.onInputChange}\n            onKeyDown={this.onInputKeyDown}\n            maxLength={maxLength}\n          />\n        }\n      </div>\n    );\n\n  }\n\n}\n"]}